/* Generated By:JJTree&JavaCC: Do not edit this line. PLSQLParserConstants.java */
/* Copyright (C) 2002 Albert Tumanov

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

*/

package net.sourceforge.pmd.lang.plsql.ast;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PLSQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 30;
  /** RegularExpression Id. */
  int EOL = 31;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 32;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 33;
  /** RegularExpression Id. */
  int REPLACE = 35;
  /** RegularExpression Id. */
  int DEFINER = 36;
  /** RegularExpression Id. */
  int CURRENT_USER = 37;
  /** RegularExpression Id. */
  int SERIALLY_REUSABLE = 38;
  /** RegularExpression Id. */
  int RESTRICT_REFERENCES = 39;
  /** RegularExpression Id. */
  int EXCEPTION_INIT = 40;
  /** RegularExpression Id. */
  int AUTONOMOUS_TRANSACTION = 41;
  /** RegularExpression Id. */
  int LANGUAGE = 42;
  /** RegularExpression Id. */
  int ADD = 43;
  /** RegularExpression Id. */
  int AGGREGATE = 44;
  /** RegularExpression Id. */
  int ALL = 45;
  /** RegularExpression Id. */
  int ALTER = 46;
  /** RegularExpression Id. */
  int AND = 47;
  /** RegularExpression Id. */
  int ANY = 48;
  /** RegularExpression Id. */
  int ARRAY = 49;
  /** RegularExpression Id. */
  int AS = 50;
  /** RegularExpression Id. */
  int ASC = 51;
  /** RegularExpression Id. */
  int AT = 52;
  /** RegularExpression Id. */
  int ATTRIBUTE = 53;
  /** RegularExpression Id. */
  int AUTHID = 54;
  /** RegularExpression Id. */
  int AVG = 55;
  /** RegularExpression Id. */
  int BEGIN = 56;
  /** RegularExpression Id. */
  int BETWEEN = 57;
  /** RegularExpression Id. */
  int BINARY_INTEGER = 58;
  /** RegularExpression Id. */
  int BODY = 59;
  /** RegularExpression Id. */
  int BOOLEAN = 60;
  /** RegularExpression Id. */
  int BULK = 61;
  /** RegularExpression Id. */
  int BY = 62;
  /** RegularExpression Id. */
  int BYTE = 63;
  /** RegularExpression Id. */
  int CASCADE = 64;
  /** RegularExpression Id. */
  int CASE = 65;
  /** RegularExpression Id. */
  int CHAR = 66;
  /** RegularExpression Id. */
  int CHAR_BASE = 67;
  /** RegularExpression Id. */
  int CHECK = 68;
  /** RegularExpression Id. */
  int CLOSE = 69;
  /** RegularExpression Id. */
  int CLUSTER = 70;
  /** RegularExpression Id. */
  int COALESCE = 71;
  /** RegularExpression Id. */
  int COLLECT = 72;
  /** RegularExpression Id. */
  int COLUMN = 73;
  /** RegularExpression Id. */
  int COMMENT = 74;
  /** RegularExpression Id. */
  int COMMIT = 75;
  /** RegularExpression Id. */
  int COMPRESS = 76;
  /** RegularExpression Id. */
  int CONNECT = 77;
  /** RegularExpression Id. */
  int CONSTANT = 78;
  /** RegularExpression Id. */
  int CONSTRUCTOR = 79;
  /** RegularExpression Id. */
  int CONTINUE = 80;
  /** RegularExpression Id. */
  int CONVERT = 81;
  /** RegularExpression Id. */
  int CREATE = 82;
  /** RegularExpression Id. */
  int CURRENT = 83;
  /** RegularExpression Id. */
  int CURRVAL = 84;
  /** RegularExpression Id. */
  int CURSOR = 85;
  /** RegularExpression Id. */
  int DATA = 86;
  /** RegularExpression Id. */
  int DATE = 87;
  /** RegularExpression Id. */
  int DAY = 88;
  /** RegularExpression Id. */
  int DECLARE = 89;
  /** RegularExpression Id. */
  int DECIMAL = 90;
  /** RegularExpression Id. */
  int _DEFAULT = 91;
  /** RegularExpression Id. */
  int DELETE = 92;
  /** RegularExpression Id. */
  int DESC = 93;
  /** RegularExpression Id. */
  int DETERMINISTIC = 94;
  /** RegularExpression Id. */
  int DISABLE = 95;
  /** RegularExpression Id. */
  int DISTINCT = 96;
  /** RegularExpression Id. */
  int DO = 97;
  /** RegularExpression Id. */
  int DROP = 98;
  /** RegularExpression Id. */
  int ELEMENT = 99;
  /** RegularExpression Id. */
  int ELSE = 100;
  /** RegularExpression Id. */
  int ELSIF = 101;
  /** RegularExpression Id. */
  int ENABLE = 102;
  /** RegularExpression Id. */
  int END = 103;
  /** RegularExpression Id. */
  int ESCAPE = 104;
  /** RegularExpression Id. */
  int EXCEPT = 105;
  /** RegularExpression Id. */
  int EXCEPTION = 106;
  /** RegularExpression Id. */
  int EXCEPTIONS = 107;
  /** RegularExpression Id. */
  int EXCLUSIVE = 108;
  /** RegularExpression Id. */
  int EXECUTE = 109;
  /** RegularExpression Id. */
  int EXISTS = 110;
  /** RegularExpression Id. */
  int EXIT = 111;
  /** RegularExpression Id. */
  int EXTERNAL = 112;
  /** RegularExpression Id. */
  int EXTENDS = 113;
  /** RegularExpression Id. */
  int EXTRACT = 114;
  /** RegularExpression Id. */
  int FALSE = 115;
  /** RegularExpression Id. */
  int FETCH = 116;
  /** RegularExpression Id. */
  int FINAL = 117;
  /** RegularExpression Id. */
  int FLOAT = 118;
  /** RegularExpression Id. */
  int FOR = 119;
  /** RegularExpression Id. */
  int FORALL = 120;
  /** RegularExpression Id. */
  int FORCE = 121;
  /** RegularExpression Id. */
  int FROM = 122;
  /** RegularExpression Id. */
  int FUNCTION = 123;
  /** RegularExpression Id. */
  int GLOBAL = 124;
  /** RegularExpression Id. */
  int GOTO = 125;
  /** RegularExpression Id. */
  int GROUP = 126;
  /** RegularExpression Id. */
  int GRANT = 127;
  /** RegularExpression Id. */
  int HASH = 128;
  /** RegularExpression Id. */
  int HAVING = 129;
  /** RegularExpression Id. */
  int HEAP = 130;
  /** RegularExpression Id. */
  int HOUR = 131;
  /** RegularExpression Id. */
  int IDENTIFIED = 132;
  /** RegularExpression Id. */
  int IF = 133;
  /** RegularExpression Id. */
  int IMMEDIATE = 134;
  /** RegularExpression Id. */
  int IN = 135;
  /** RegularExpression Id. */
  int INDEX = 136;
  /** RegularExpression Id. */
  int INDICES = 137;
  /** RegularExpression Id. */
  int INCLUDING = 138;
  /** RegularExpression Id. */
  int INDEXTYPE = 139;
  /** RegularExpression Id. */
  int INDICATOR = 140;
  /** RegularExpression Id. */
  int INSERT = 141;
  /** RegularExpression Id. */
  int INSTANTIABLE = 142;
  /** RegularExpression Id. */
  int INTEGER = 143;
  /** RegularExpression Id. */
  int INTERFACE = 144;
  /** RegularExpression Id. */
  int INTERSECT = 145;
  /** RegularExpression Id. */
  int INTERVAL = 146;
  /** RegularExpression Id. */
  int INTO = 147;
  /** RegularExpression Id. */
  int INVALIDATE = 148;
  /** RegularExpression Id. */
  int IS = 149;
  /** RegularExpression Id. */
  int ISOLATION = 150;
  /** RegularExpression Id. */
  int JAVA = 151;
  /** RegularExpression Id. */
  int LEVEL = 152;
  /** RegularExpression Id. */
  int LIKE = 153;
  /** RegularExpression Id. */
  int LIMIT = 154;
  /** RegularExpression Id. */
  int LIMITED = 155;
  /** RegularExpression Id. */
  int LOCK = 156;
  /** RegularExpression Id. */
  int LONG = 157;
  /** RegularExpression Id. */
  int LOOP = 158;
  /** RegularExpression Id. */
  int MAP = 159;
  /** RegularExpression Id. */
  int MAX = 160;
  /** RegularExpression Id. */
  int MEMBER = 161;
  /** RegularExpression Id. */
  int MERGE = 162;
  /** RegularExpression Id. */
  int MIN = 163;
  /** RegularExpression Id. */
  int MINUS = 164;
  /** RegularExpression Id. */
  int MINUTE = 165;
  /** RegularExpression Id. */
  int MLSLABEL = 166;
  /** RegularExpression Id. */
  int MODIFY = 167;
  /** RegularExpression Id. */
  int MOD = 168;
  /** RegularExpression Id. */
  int MODE = 169;
  /** RegularExpression Id. */
  int MONTH = 170;
  /** RegularExpression Id. */
  int NATURAL = 171;
  /** RegularExpression Id. */
  int NATURALN = 172;
  /** RegularExpression Id. */
  int NEW = 173;
  /** RegularExpression Id. */
  int NEW_DOT = 174;
  /** RegularExpression Id. */
  int NEXTVAL = 175;
  /** RegularExpression Id. */
  int NO = 176;
  /** RegularExpression Id. */
  int NOCOMPRESS = 177;
  /** RegularExpression Id. */
  int NOCOPY = 178;
  /** RegularExpression Id. */
  int NOT = 179;
  /** RegularExpression Id. */
  int NOWAIT = 180;
  /** RegularExpression Id. */
  int NULL = 181;
  /** RegularExpression Id. */
  int NULLIF = 182;
  /** RegularExpression Id. */
  int NUMBER = 183;
  /** RegularExpression Id. */
  int BFILE_BASE = 184;
  /** RegularExpression Id. */
  int BLOB_BASE = 185;
  /** RegularExpression Id. */
  int CLOB_BASE = 186;
  /** RegularExpression Id. */
  int DATE_BASE = 187;
  /** RegularExpression Id. */
  int NUMBER_BASE = 188;
  /** RegularExpression Id. */
  int OBJECT = 189;
  /** RegularExpression Id. */
  int OCIROWID = 190;
  /** RegularExpression Id. */
  int OF = 191;
  /** RegularExpression Id. */
  int OID = 192;
  /** RegularExpression Id. */
  int ON = 193;
  /** RegularExpression Id. */
  int OPAQUE = 194;
  /** RegularExpression Id. */
  int OPEN = 195;
  /** RegularExpression Id. */
  int OPERATOR = 196;
  /** RegularExpression Id. */
  int OPTION = 197;
  /** RegularExpression Id. */
  int OR = 198;
  /** RegularExpression Id. */
  int ORDER = 199;
  /** RegularExpression Id. */
  int ORGANIZATION = 200;
  /** RegularExpression Id. */
  int OTHERS = 201;
  /** RegularExpression Id. */
  int OUT = 202;
  /** RegularExpression Id. */
  int OVERRIDING = 203;
  /** RegularExpression Id. */
  int PACKAGE = 204;
  /** RegularExpression Id. */
  int PARALLEL_ENABLE = 205;
  /** RegularExpression Id. */
  int PARTITION = 206;
  /** RegularExpression Id. */
  int PCTFREE = 207;
  /** RegularExpression Id. */
  int PIPE = 208;
  /** RegularExpression Id. */
  int PIPELINED = 209;
  /** RegularExpression Id. */
  int PLS_INTEGER = 210;
  /** RegularExpression Id. */
  int POSITIVE = 211;
  /** RegularExpression Id. */
  int POSITIVEN = 212;
  /** RegularExpression Id. */
  int PRAGMA = 213;
  /** RegularExpression Id. */
  int PRESERVE = 214;
  /** RegularExpression Id. */
  int PRIOR = 215;
  /** RegularExpression Id. */
  int PROMPT = 216;
  /** RegularExpression Id. */
  int PRIVATE = 217;
  /** RegularExpression Id. */
  int PROCEDURE = 218;
  /** RegularExpression Id. */
  int PUBLIC = 219;
  /** RegularExpression Id. */
  int RAISE = 220;
  /** RegularExpression Id. */
  int RANGE = 221;
  /** RegularExpression Id. */
  int RAW = 222;
  /** RegularExpression Id. */
  int REAL = 223;
  /** RegularExpression Id. */
  int RECORD = 224;
  /** RegularExpression Id. */
  int REF = 225;
  /** RegularExpression Id. */
  int RELEASE = 226;
  /** RegularExpression Id. */
  int RELIES_ON = 227;
  /** RegularExpression Id. */
  int RENAME = 228;
  /** RegularExpression Id. */
  int RESOURCE = 229;
  /** RegularExpression Id. */
  int RESULT = 230;
  /** RegularExpression Id. */
  int RESULT_CACHE = 231;
  /** RegularExpression Id. */
  int RETURN = 232;
  /** RegularExpression Id. */
  int RETURNING = 233;
  /** RegularExpression Id. */
  int REVERSE = 234;
  /** RegularExpression Id. */
  int REVOKE = 235;
  /** RegularExpression Id. */
  int ROLLBACK = 236;
  /** RegularExpression Id. */
  int ROW = 237;
  /** RegularExpression Id. */
  int ROWS = 238;
  /** RegularExpression Id. */
  int ROWID = 239;
  /** RegularExpression Id. */
  int ROWNUM = 240;
  /** RegularExpression Id. */
  int ROWTYPE = 241;
  /** RegularExpression Id. */
  int SAVE = 242;
  /** RegularExpression Id. */
  int SAVEPOINT = 243;
  /** RegularExpression Id. */
  int SECOND = 244;
  /** RegularExpression Id. */
  int SELECT = 245;
  /** RegularExpression Id. */
  int SELF = 246;
  /** RegularExpression Id. */
  int SEPARATE = 247;
  /** RegularExpression Id. */
  int SET = 248;
  /** RegularExpression Id. */
  int SIZE = 249;
  /** RegularExpression Id. */
  int SHARE = 250;
  /** RegularExpression Id. */
  int SMALLINT = 251;
  /** RegularExpression Id. */
  int SPACE = 252;
  /** RegularExpression Id. */
  int SQL = 253;
  /** RegularExpression Id. */
  int SQLCODE = 254;
  /** RegularExpression Id. */
  int SQLERRM = 255;
  /** RegularExpression Id. */
  int START = 256;
  /** RegularExpression Id. */
  int STATIC = 257;
  /** RegularExpression Id. */
  int STDDEV = 258;
  /** RegularExpression Id. */
  int SUBTYPE = 259;
  /** RegularExpression Id. */
  int SUBSTITUTABLE = 260;
  /** RegularExpression Id. */
  int SUCCESSFUL = 261;
  /** RegularExpression Id. */
  int SUM = 262;
  /** RegularExpression Id. */
  int SYNONYM = 263;
  /** RegularExpression Id. */
  int SYSDATE = 264;
  /** RegularExpression Id. */
  int SYS_REFCURSOR = 265;
  /** RegularExpression Id. */
  int TABLE = 266;
  /** RegularExpression Id. */
  int TEMPORARY = 267;
  /** RegularExpression Id. */
  int THEN = 268;
  /** RegularExpression Id. */
  int TIME = 269;
  /** RegularExpression Id. */
  int TIMESTAMP = 270;
  /** RegularExpression Id. */
  int TIMEZONE_REGION = 271;
  /** RegularExpression Id. */
  int TIMEZONE_ABBR = 272;
  /** RegularExpression Id. */
  int TIMEZONE_MINUTE = 273;
  /** RegularExpression Id. */
  int TIMEZONE_HOUR = 274;
  /** RegularExpression Id. */
  int TO = 275;
  /** RegularExpression Id. */
  int TRANSACTION = 276;
  /** RegularExpression Id. */
  int TRIGGER = 277;
  /** RegularExpression Id. */
  int TRUE = 278;
  /** RegularExpression Id. */
  int TYPE = 279;
  /** RegularExpression Id. */
  int UI = 280;
  /** RegularExpression Id. */
  int UNDER = 281;
  /** RegularExpression Id. */
  int UNIQUE = 282;
  /** RegularExpression Id. */
  int USING = 283;
  /** RegularExpression Id. */
  int VALUES = 284;
  /** RegularExpression Id. */
  int WHEN = 285;
  /** RegularExpression Id. */
  int WHERE = 286;
  /** RegularExpression Id. */
  int WHILE = 287;
  /** RegularExpression Id. */
  int YES = 288;
  /** RegularExpression Id. */
  int SHOW = 289;
  /** RegularExpression Id. */
  int SPOOL = 290;
  /** RegularExpression Id. */
  int A = 291;
  /** RegularExpression Id. */
  int UPDATE = 292;
  /** RegularExpression Id. */
  int VARCHAR = 293;
  /** RegularExpression Id. */
  int VARCHAR2 = 294;
  /** RegularExpression Id. */
  int DOUBLE = 295;
  /** RegularExpression Id. */
  int DEC = 296;
  /** RegularExpression Id. */
  int PRECISION = 297;
  /** RegularExpression Id. */
  int INT = 298;
  /** RegularExpression Id. */
  int NUMERIC = 299;
  /** RegularExpression Id. */
  int SIGNTYPE = 300;
  /** RegularExpression Id. */
  int NCHAR = 301;
  /** RegularExpression Id. */
  int NVARCHAR2 = 302;
  /** RegularExpression Id. */
  int STRING = 303;
  /** RegularExpression Id. */
  int UROWID = 304;
  /** RegularExpression Id. */
  int VARRAY = 305;
  /** RegularExpression Id. */
  int VARYING = 306;
  /** RegularExpression Id. */
  int BFILE = 307;
  /** RegularExpression Id. */
  int BLOB = 308;
  /** RegularExpression Id. */
  int CLOB = 309;
  /** RegularExpression Id. */
  int NCLOB = 310;
  /** RegularExpression Id. */
  int YEAR = 311;
  /** RegularExpression Id. */
  int LOCAL = 312;
  /** RegularExpression Id. */
  int WITH = 313;
  /** RegularExpression Id. */
  int ZONE = 314;
  /** RegularExpression Id. */
  int CHARACTER = 315;
  /** RegularExpression Id. */
  int AFTER = 316;
  /** RegularExpression Id. */
  int BEFORE = 317;
  /** RegularExpression Id. */
  int INSTEADOF = 318;
  /** RegularExpression Id. */
  int FOREACHROW = 319;
  /** RegularExpression Id. */
  int REFERENCING = 320;
  /** RegularExpression Id. */
  int OLD = 321;
  /** RegularExpression Id. */
  int PARENT = 322;
  /** RegularExpression Id. */
  int VIEW = 323;
  /** RegularExpression Id. */
  int UNION = 324;
  /** RegularExpression Id. */
  int CC_IF = 325;
  /** RegularExpression Id. */
  int CC_THEN = 326;
  /** RegularExpression Id. */
  int CC_ELSE = 327;
  /** RegularExpression Id. */
  int CC_ELSIF = 328;
  /** RegularExpression Id. */
  int CC_END = 329;
  /** RegularExpression Id. */
  int CC_ERROR = 330;
  /** RegularExpression Id. */
  int CC_PLSQL_LINE = 331;
  /** RegularExpression Id. */
  int CC_PLSQL_UNIT = 332;
  /** RegularExpression Id. */
  int PLSQL_CCFLAGS = 333;
  /** RegularExpression Id. */
  int PLSQL_DEBUG = 334;
  /** RegularExpression Id. */
  int PLSQL_OPTIMIZE_LEVEL = 335;
  /** RegularExpression Id. */
  int PLSQL_CODE_TYPE = 336;
  /** RegularExpression Id. */
  int PLSQL_WARNINGS = 337;
  /** RegularExpression Id. */
  int NLS_LENGTH_SEMANTICS = 338;
  /** RegularExpression Id. */
  int ANALYZE = 339;
  /** RegularExpression Id. */
  int ASSOCIATE = 340;
  /** RegularExpression Id. */
  int AUDIT = 341;
  /** RegularExpression Id. */
  int COMPOUND = 342;
  /** RegularExpression Id. */
  int DATABASE = 343;
  /** RegularExpression Id. */
  int CALL = 344;
  /** RegularExpression Id. */
  int DDL = 345;
  /** RegularExpression Id. */
  int DISASSOCIATE = 346;
  /** RegularExpression Id. */
  int EACH = 347;
  /** RegularExpression Id. */
  int FOLLOWS = 348;
  /** RegularExpression Id. */
  int LOGOFF = 349;
  /** RegularExpression Id. */
  int LOGON = 350;
  /** RegularExpression Id. */
  int NESTED = 351;
  /** RegularExpression Id. */
  int NOAUDIT = 352;
  /** RegularExpression Id. */
  int SCHEMA = 353;
  /** RegularExpression Id. */
  int SERVERERROR = 354;
  /** RegularExpression Id. */
  int SHUTDOWN = 355;
  /** RegularExpression Id. */
  int STARTUP = 356;
  /** RegularExpression Id. */
  int STATEMENT = 357;
  /** RegularExpression Id. */
  int STATISTICS = 358;
  /** RegularExpression Id. */
  int SUSPEND = 359;
  /** RegularExpression Id. */
  int TRUNCATE = 360;
  /** RegularExpression Id. */
  int WRAPPED = 361;
  /** RegularExpression Id. */
  int LIBRARY = 362;
  /** RegularExpression Id. */
  int NAME = 363;
  /** RegularExpression Id. */
  int STRUCT = 364;
  /** RegularExpression Id. */
  int CONTEXT = 365;
  /** RegularExpression Id. */
  int PARAMETERS = 366;
  /** RegularExpression Id. */
  int LENGTH = 367;
  /** RegularExpression Id. */
  int TDO = 368;
  /** RegularExpression Id. */
  int MAXLEN = 369;
  /** RegularExpression Id. */
  int CHARSETID = 370;
  /** RegularExpression Id. */
  int CHARSETFORM = 371;
  /** RegularExpression Id. */
  int ACCEPT = 372;
  /** RegularExpression Id. */
  int COPY = 373;
  /** RegularExpression Id. */
  int DEFINE = 374;
  /** RegularExpression Id. */
  int DISCONNECT = 375;
  /** RegularExpression Id. */
  int HOST = 376;
  /** RegularExpression Id. */
  int PRINT = 377;
  /** RegularExpression Id. */
  int QUIT = 378;
  /** RegularExpression Id. */
  int REMARK = 379;
  /** RegularExpression Id. */
  int UNDEFINE = 380;
  /** RegularExpression Id. */
  int VARIABLE = 381;
  /** RegularExpression Id. */
  int WHENEVER = 382;
  /** RegularExpression Id. */
  int ATTACH = 383;
  /** RegularExpression Id. */
  int CAST = 384;
  /** RegularExpression Id. */
  int TREAT = 385;
  /** RegularExpression Id. */
  int TRIM = 386;
  /** RegularExpression Id. */
  int LEFT = 387;
  /** RegularExpression Id. */
  int RIGHT = 388;
  /** RegularExpression Id. */
  int BOTH = 389;
  /** RegularExpression Id. */
  int EMPTY = 390;
  /** RegularExpression Id. */
  int MULTISET = 391;
  /** RegularExpression Id. */
  int SUBMULTISET = 392;
  /** RegularExpression Id. */
  int LEADING = 393;
  /** RegularExpression Id. */
  int TRAILING = 394;
  /** RegularExpression Id. */
  int CHAR_CS = 395;
  /** RegularExpression Id. */
  int NCHAR_CS = 396;
  /** RegularExpression Id. */
  int PRECEDES = 397;
  /** RegularExpression Id. */
  int FORWARD = 398;
  /** RegularExpression Id. */
  int CROSSEDITION = 399;
  /** RegularExpression Id. */
  int DBTIMEZONE = 400;
  /** RegularExpression Id. */
  int SESSIONTIMEZONE = 401;
  /** RegularExpression Id. */
  int AUTHENTICATED = 402;
  /** RegularExpression Id. */
  int LINK = 403;
  /** RegularExpression Id. */
  int SHARED = 404;
  /** RegularExpression Id. */
  int DIRECTORY = 405;
  /** RegularExpression Id. */
  int USER = 406;
  /** RegularExpression Id. */
  int COMPILE = 407;
  /** RegularExpression Id. */
  int RESOLVE = 408;
  /** RegularExpression Id. */
  int RESOLVER = 409;
  /** RegularExpression Id. */
  int NAMED = 410;
  /** RegularExpression Id. */
  int SOURCE = 411;
  /** RegularExpression Id. */
  int CLASS = 412;
  /** RegularExpression Id. */
  int GERMAN_SPECIAL_CHARACTERS = 413;
  /** RegularExpression Id. */
  int LETTER = 414;
  /** RegularExpression Id. */
  int DIGIT = 415;
  /** RegularExpression Id. */
  int _CHARACTER = 416;
  /** RegularExpression Id. */
  int _CHARACTER_WO_ASTERISK = 417;
  /** RegularExpression Id. */
  int SPECIAL_CHARACTERS = 418;
  /** RegularExpression Id. */
  int DELIMITER = 419;
  /** RegularExpression Id. */
  int IDENTIFIER = 420;
  /** RegularExpression Id. */
  int UNSIGNED_NUMERIC_LITERAL = 421;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 422;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 423;
  /** RegularExpression Id. */
  int _WHATEVER_CHARACTER_WO_ASTERISK = 424;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 425;
  /** RegularExpression Id. */
  int STRING_LITERAL = 426;
  /** RegularExpression Id. */
  int _WHATEVER_CHARACTER_WO_QUOTE = 427;
  /** RegularExpression Id. */
  int QUOTED_LITERAL = 428;
  /** RegularExpression Id. */
  int SQLDATA_CLASS = 429;
  /** RegularExpression Id. */
  int CUSTOMDATUM_CLASS = 430;
  /** RegularExpression Id. */
  int ORADATA_CLASS = 431;
  /** RegularExpression Id. */
  int JAVA_INTERFACE_CLASS = 432;
  /** RegularExpression Id. */
  int SQLPLUS_TERMINATOR = 433;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;
  /** Lexical state. */
  int IN_SQL_STATEMENT_ENDED_SEMICOLON = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"/\"",
    "\"@\"",
    "\".\"",
    "\";\"",
    "\"(\"",
    "\"*\"",
    "\",\"",
    "\"-\"",
    "\")\"",
    "\"...\"",
    "\":\"",
    "\"=\"",
    "\"%\"",
    "\"..\"",
    "\"!\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"||\"",
    "\"**\"",
    "\"<<\"",
    "\">>\"",
    "\"=>\"",
    "\"(*)\"",
    "\" \"",
    "\"\\t\"",
    "\"\\f\"",
    "<token of kind 28>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "<EOL>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 34>",
    "\"REPLACE\"",
    "\"DEFINER\"",
    "\"CURRENT_USER\"",
    "\"SERIALLY_REUSABLE\"",
    "\"RESTRICT_REFERENCES\"",
    "\"EXCEPTION_INIT\"",
    "\"AUTONOMOUS_TRANSACTION\"",
    "\"LANGUAGE\"",
    "\"ADD\"",
    "\"AGGREGATE\"",
    "\"ALL\"",
    "\"ALTER\"",
    "\"AND\"",
    "\"ANY\"",
    "\"ARRAY\"",
    "\"AS\"",
    "\"ASC\"",
    "\"AT\"",
    "\"ATTRIBUTE\"",
    "\"AUTHID\"",
    "\"AVG\"",
    "\"BEGIN\"",
    "\"BETWEEN\"",
    "\"BINARY_INTEGER\"",
    "\"BODY\"",
    "\"BOOLEAN\"",
    "\"BULK\"",
    "\"BY\"",
    "\"BYTE\"",
    "\"CASCADE\"",
    "\"CASE\"",
    "\"CHAR\"",
    "\"CHAR_BASE\"",
    "\"CHECK\"",
    "\"CLOSE\"",
    "\"CLUSTER\"",
    "\"COALESCE\"",
    "\"COLLECT\"",
    "\"COLUMN\"",
    "\"COMMENT\"",
    "\"COMMIT\"",
    "\"COMPRESS\"",
    "\"CONNECT\"",
    "\"CONSTANT\"",
    "\"CONSTRUCTOR\"",
    "\"CONTINUE\"",
    "\"CONVERT\"",
    "\"CREATE\"",
    "\"CURRENT\"",
    "\"CURRVAL\"",
    "\"CURSOR\"",
    "\"DATA\"",
    "\"DATE\"",
    "\"DAY\"",
    "\"DECLARE\"",
    "\"DECIMAL\"",
    "\"DEFAULT\"",
    "\"DELETE\"",
    "\"DESC\"",
    "\"DETERMINISTIC\"",
    "\"DISABLE\"",
    "\"DISTINCT\"",
    "\"DO\"",
    "\"DROP\"",
    "\"ELEMENT\"",
    "\"ELSE\"",
    "\"ELSIF\"",
    "\"ENABLE\"",
    "\"END\"",
    "\"ESCAPE\"",
    "\"EXCEPT\"",
    "\"EXCEPTION\"",
    "\"EXCEPTIONS\"",
    "\"EXCLUSIVE\"",
    "\"EXECUTE\"",
    "\"EXISTS\"",
    "\"EXIT\"",
    "\"EXTERNAL\"",
    "\"EXTENDS\"",
    "\"EXTRACT\"",
    "\"FALSE\"",
    "\"FETCH\"",
    "\"FINAL\"",
    "\"FLOAT\"",
    "\"FOR\"",
    "\"FORALL\"",
    "\"FORCE\"",
    "\"FROM\"",
    "\"FUNCTION\"",
    "\"GLOBAL\"",
    "\"GOTO\"",
    "\"GROUP\"",
    "\"GRANT\"",
    "\"HASH\"",
    "\"HAVING\"",
    "\"HEAP\"",
    "\"HOUR\"",
    "\"IDENTIFIED\"",
    "\"IF\"",
    "\"IMMEDIATE\"",
    "\"IN\"",
    "\"INDEX\"",
    "\"INDICES\"",
    "\"INCLUDING\"",
    "\"INDEXTYPE\"",
    "\"INDICATOR\"",
    "\"INSERT\"",
    "\"INSTANTIABLE\"",
    "\"INTEGER\"",
    "\"INTERFACE\"",
    "\"INTERSECT\"",
    "\"INTERVAL\"",
    "\"INTO\"",
    "\"INVALIDATE\"",
    "\"IS\"",
    "\"ISOLATION\"",
    "\"JAVA\"",
    "\"LEVEL\"",
    "\"LIKE\"",
    "\"LIMIT\"",
    "\"LIMITED\"",
    "\"LOCK\"",
    "\"LONG\"",
    "\"LOOP\"",
    "\"MAP\"",
    "\"MAX\"",
    "\"MEMBER\"",
    "\"MERGE\"",
    "\"MIN\"",
    "\"MINUS\"",
    "\"MINUTE\"",
    "\"MLSLABEL\"",
    "\"MODIFY\"",
    "\"MOD\"",
    "\"MODE\"",
    "\"MONTH\"",
    "\"NATURAL\"",
    "\"NATURALN\"",
    "\"NEW\"",
    "\"NEW.\"",
    "\"NEXTVAL\"",
    "\"NO\"",
    "\"NOCOMPRESS\"",
    "\"NOCOPY\"",
    "\"NOT\"",
    "\"NOWAIT\"",
    "\"NULL\"",
    "\"NULLIF\"",
    "\"NUMBER\"",
    "\"BFILE_BASE\"",
    "\"BLOB_BASE\"",
    "\"CLOB_BASE\"",
    "\"DATE_BASE\"",
    "\"NUMBER_BASE\"",
    "\"OBJECT\"",
    "\"OCIROWID\"",
    "\"OF\"",
    "\"OID\"",
    "\"ON\"",
    "\"OPAQUE\"",
    "\"OPEN\"",
    "\"OPERATOR\"",
    "\"OPTION\"",
    "\"OR\"",
    "\"ORDER\"",
    "\"ORGANIZATION\"",
    "\"OTHERS\"",
    "\"OUT\"",
    "\"OVERRIDING\"",
    "\"PACKAGE\"",
    "\"PARALLEL_ENABLE\"",
    "\"PARTITION\"",
    "\"PCTFREE\"",
    "\"PIPE\"",
    "\"PIPELINED\"",
    "\"PLS_INTEGER\"",
    "\"POSITIVE\"",
    "\"POSITIVEN\"",
    "\"PRAGMA\"",
    "\"PRESERVE\"",
    "\"PRIOR\"",
    "\"PROMPT\"",
    "\"PRIVATE\"",
    "\"PROCEDURE\"",
    "\"PUBLIC\"",
    "\"RAISE\"",
    "\"RANGE\"",
    "\"RAW\"",
    "\"REAL\"",
    "\"RECORD\"",
    "\"REF\"",
    "\"RELEASE\"",
    "\"RELIES_ON\"",
    "\"RENAME\"",
    "\"RESOURCE\"",
    "\"RESULT\"",
    "\"RESULT_CACHE\"",
    "\"RETURN\"",
    "\"RETURNING\"",
    "\"REVERSE\"",
    "\"REVOKE\"",
    "\"ROLLBACK\"",
    "\"ROW\"",
    "\"ROWS\"",
    "\"ROWID\"",
    "\"ROWNUM\"",
    "\"ROWTYPE\"",
    "\"SAVE\"",
    "\"SAVEPOINT\"",
    "\"SECOND\"",
    "\"SELECT\"",
    "\"SELF\"",
    "\"SEPARATE\"",
    "\"SET\"",
    "\"SIZE\"",
    "\"SHARE\"",
    "\"SMALLINT\"",
    "\"SPACE\"",
    "\"SQL\"",
    "\"SQLCODE\"",
    "\"SQLERRM\"",
    "\"START\"",
    "\"STATIC\"",
    "\"STDDEV\"",
    "\"SUBTYPE\"",
    "\"SUBSTITUTABLE\"",
    "\"SUCCESSFUL\"",
    "\"SUM\"",
    "\"SYNONYM\"",
    "\"SYSDATE\"",
    "\"SYS_REFCURSOR\"",
    "\"TABLE\"",
    "\"TEMPORARY\"",
    "\"THEN\"",
    "\"TIME\"",
    "\"TIMESTAMP\"",
    "\"TIMEZONE_REGION\"",
    "\"TIMEZONE_ABBR\"",
    "\"TIMEZONE_MINUTE\"",
    "\"TIMEZONE_HOUR\"",
    "\"TO\"",
    "\"TRANSACTION\"",
    "\"TRIGGER\"",
    "\"TRUE\"",
    "\"TYPE\"",
    "\"UI\"",
    "\"UNDER\"",
    "\"UNIQUE\"",
    "\"USING\"",
    "\"VALUES\"",
    "\"WHEN\"",
    "\"WHERE\"",
    "\"WHILE\"",
    "\"YES\"",
    "\"SHOW\"",
    "\"SPOOL\"",
    "\"A\"",
    "\"UPDATE\"",
    "\"VARCHAR\"",
    "\"VARCHAR2\"",
    "\"DOUBLE\"",
    "\"DEC\"",
    "\"PRECISION\"",
    "\"INT\"",
    "\"NUMERIC\"",
    "\"SIGNTYPE\"",
    "\"NCHAR\"",
    "\"NVARCHAR2\"",
    "\"STRING\"",
    "\"UROWID\"",
    "\"VARRAY\"",
    "\"VARYING\"",
    "\"BFILE\"",
    "\"BLOB\"",
    "\"CLOB\"",
    "\"NCLOB\"",
    "\"YEAR\"",
    "\"LOCAL\"",
    "\"WITH\"",
    "\"ZONE\"",
    "\"CHARACTER\"",
    "\"AFTER\"",
    "\"BEFORE\"",
    "\"INSTEAD OF\"",
    "\"FOR EACH ROW\"",
    "\"REFERENCING\"",
    "\"OLD\"",
    "\"PARENT\"",
    "\"VIEW\"",
    "\"UNION\"",
    "\"$IF\"",
    "\"$THEN\"",
    "\"$ELSE\"",
    "\"$ELSIF\"",
    "\"$END\"",
    "\"$ERROR\"",
    "\"$PLSQL_LINE\"",
    "\"$PLSQL_UNIT\"",
    "\"$PLSQL_CCFLAGS\"",
    "\"$PLSQL_DEBUG\"",
    "\"$PLSQL_OPTIMIZE_LEVEL\"",
    "\"$PLSQL_CODE_TYPE\"",
    "\"$PLSQL_WARNINGS\"",
    "\"$NLS_LENGTH_SEMANTICS\"",
    "\"ANALYZE\"",
    "\"ASSOCIATE\"",
    "\"AUDIT\"",
    "\"COMPOUND\"",
    "\"DATABASE\"",
    "\"CALL\"",
    "\"DDL\"",
    "\"DISASSOCIATE\"",
    "\"EACH\"",
    "\"FOLLOWS\"",
    "\"LOGOFF\"",
    "\"LOGON\"",
    "\"NESTED\"",
    "\"NOAUDIT\"",
    "\"SCHEMA\"",
    "\"SERVERERROR\"",
    "\"SHUTDOWN\"",
    "\"STARTUP\"",
    "\"STATEMENT\"",
    "\"STATISTICS\"",
    "\"SUSPEND\"",
    "\"TRUNCATE\"",
    "\"WRAPPED\"",
    "\"LIBRARY\"",
    "\"NAME\"",
    "\"STRUCT\"",
    "\"CONTEXT\"",
    "\"PARAMETERS\"",
    "\"LENGTH\"",
    "\"TDO\"",
    "\"MAXLEN\"",
    "\"CHARSETID\"",
    "\"CHARSETFORM\"",
    "\"ACCEPT\"",
    "\"COPY\"",
    "\"DEFINE\"",
    "\"DISCONNECT\"",
    "\"HOST\"",
    "\"PRINT\"",
    "\"QUIT\"",
    "\"REMARK\"",
    "\"UNDEFINE\"",
    "\"VARIABLE\"",
    "\"WHENEVER\"",
    "\"ATTACH\"",
    "\"CAST\"",
    "\"TREAT\"",
    "\"TRIM\"",
    "\"LEFT\"",
    "\"RIGHT\"",
    "\"BOTH\"",
    "\"EMPTY\"",
    "\"MULTISET\"",
    "\"SUBMULTISET\"",
    "\"LEADING\"",
    "\"TRAILING\"",
    "\"CHAR_CS\"",
    "\"NCHAR_CS\"",
    "\"PRECEDES\"",
    "\"FORWARD\"",
    "\"CROSSEDITION\"",
    "\"DBTIMEZONE\"",
    "\"SESSIONTIMEZONE\"",
    "\"AUTHENTICATED\"",
    "\"LINK\"",
    "\"SHARED\"",
    "\"DIRECTORY\"",
    "\"USER\"",
    "\"COMPILE\"",
    "\"RESOLVE\"",
    "\"RESOLVER\"",
    "\"NAMED\"",
    "\"SOURCE\"",
    "\"CLASS\"",
    "<GERMAN_SPECIAL_CHARACTERS>",
    "<LETTER>",
    "<DIGIT>",
    "<_CHARACTER>",
    "<_CHARACTER_WO_ASTERISK>",
    "<SPECIAL_CHARACTERS>",
    "<DELIMITER>",
    "<IDENTIFIER>",
    "<UNSIGNED_NUMERIC_LITERAL>",
    "<FLOAT_LITERAL>",
    "<INTEGER_LITERAL>",
    "<_WHATEVER_CHARACTER_WO_ASTERISK>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<_WHATEVER_CHARACTER_WO_QUOTE>",
    "<QUOTED_LITERAL>",
    "\"SQLData\"",
    "\"CustomDatum\"",
    "\"OraData\"",
    "<JAVA_INTERFACE_CLASS>",
    "<SQLPLUS_TERMINATOR>",
  };

}
