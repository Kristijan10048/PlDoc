Maven 2 PLDOc plugin.

Similar in use with javadoc plugin.

you need to add the following to your reporting section of your pom:

+-----+
 <reporting>
        <plugins>
            <plugin>
                <groupId>net.sourceforge.pldoc</groupId>
                <artifactId>maven-pldoc-plugin</artifactId>
                <version>${project.version}</version>
            </plugin>
        </plugins>
 </reporting>
+-----+


Here is a example if you want to change the default configuration (location of sql files ... )

+-----+
<plugin>
	<groupId>net.sourceforge.pldoc</groupId>
	<artifactId>maven-pldoc-plugin</artifactId>
	<version>${velocityProjectVersion}</version>
	<configuration>
		<applicationTitle>project-name</applicationTitle>
		<sourceDirectory>src/sql</sourceDirectory>
		<includes>*.sql</includes>
		<reportOutputDirectory>target/site/apidocs</reportOutputDirectory>
	</configuration>                    
</plugin>
+-----+


Here is a example if you want to change the default configuration (reading database code ... )

+-----+
    <plugins>
      <plugin>
	<groupId>net.sourceforge.pldoc</groupId>
	<artifactId>maven-pldoc-plugin</artifactId>
	<version>${velocityProjectVersion}</version>
	  <dependencies>
	    <dependency>
	     <groupId>com.oracle</groupId>
	     <artifactId>ojdbc14</artifactId>
	     <version>10.2.0.3</version>
	    </dependency>
	  </dependencies>
	<configuration>
	  <applicationTitle>Maven Goal Enterprise PLDoc</applicationTitle>
	  <!-- sourceDirectory>src/test/resources/samples</sourceDirectory>
	  <includes>*.sql</includes -->
	  <destDir>destDir</destDir>
	  <outputDirectory>target/site/apidocs/outputDirectory</outputDirectory>
	  <reportOutputDirectory>target/site/apidocs/reportOutputDirectory</reportOutputDirectory>
	  <showSkippedPackages>true</showSkippedPackages>
	  <dbUrl>jdbc:oracle:thin:@//192.168.100.22:1521/orcl</dbUrl>
	  <dbUser>system</dbUser>
	  <dbPassword>oracle</dbPassword>
	  <inputTypes>PROCEDURE,FUNCTION,TRIGGER,PACKAGE,TYPE,PACKAGE BODY,TYPE BODY</inputTypes>
	  <inputObjects>ANONYMOUS.%,APEX_040000.%,APEX_PUBLIC_USER.%,APPQOSSYS.%,BI.%,CACHEADM.%,CTXSYS.%,DBSNMP.%,DEMO.%,DIP.%,EXFSYS.%,FLOWS_FILES.%,HR.%,HR1.%,HR_TRIG.%,IX.%,MDDATA.%,MDSYS.%,MGMT_VIEW.%,OBE.%,OE.%,OE1.%,OLAPSYS.%,ORACLE_OCM.%,ORDDATA.%,ORDPLUGINS.%,ORDSYS.%,OUTLN.%,OWBSYS.%,OWBSYS_AUDIT.%,PHPDEMO.%,PLS.%,PM.%,SCOTT.%,SH.%,SI_INFORMTN_SCHEMA.%,SPATIAL_CSW_ADMIN_USR.%,SPATIAL_WFS_ADMIN_USR.%,SYS.%,SYSMAN.%,SYSTEM.%,TIMESTEN.%,TTHR.%,WMSYS.%,XDB.%,XDBMETADATA.%,XDBPM.%,XFILES.%,XS$NULL.%</inputObjects>
	</configuration>                    
      </plugin>
      ...
    </plugins>
+-----+


Database access requires Oracle JDBC classes: due to licensing restrictions, they are not hosted in Maven Central. A {{{http://repo2.maven.org/maven2/com/oracle/ojdbc14/10.2.0.3.0/ojdbc14-10.2.0.3.0.pom} pom.xml}} file exists, but you will have to download th JAR file(s) and install them into your local Maven repository. 

+-----+
mvn install:install-file -Dfile=${ORACLE_HOME}/ojdbc14.jar -Dpackaging=jar -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.3 -Dpackage=jar -DgeneratePom=true 
+-----+

enjoy writing documentation...
